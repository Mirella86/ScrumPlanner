@model IEnumerable<ScrumUI.Task>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("New Task", "Create")
</p>
<table>
    <tr>
        <th style="width: 30%">
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th style="width:10%">
            @Html.Name("Estimated")
        </th>
        <th style="width: 15%">
            @Html.Name("Resource")
        </th>
        <th style="width: 10%">
            @Html.Name("Possible duration")
        </th>
        <th style="width: 10%">
            @Html.Name("Possible delay")
        </th>
        <th style="width: 30%"></th>
    </tr>

@foreach (var item in Model) {
    var fullName = string.Empty;
    if (@item.Resource != null)
    {
        fullName = item.Resource.FirstName + " " + item.Resource.LastName;

    }
    var possibleDelay = item.RealHours - item.EstimatedHours;
    
        @Html.HiddenFor(modelItem=>item.Resource.ResourceId)
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EstimatedHours)
        </td>
        <td>
            @if (@item.Resource != null)
            {
                @Html.ActionLink(fullName, "Details", "Resource", new {area = "", id = item.Resource.ResourceId.ToString()}, null)
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RealHours)
        </td>
        <td>
            @possibleDelay
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.TaskId }) |
            @Html.ActionLink("Details", "Details", new { id=item.TaskId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.TaskId })
        </td>
    </tr>
}

</table>
